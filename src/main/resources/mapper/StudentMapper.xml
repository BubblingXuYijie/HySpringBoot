<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="icu.xuyijie.myfirstspringboot.mapper.StudentMapper">
    <resultMap id="map1" type="icu.xuyijie.myfirstspringboot.entity.Student">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="age" property="age" jdbcType="INTEGER" />
        <result column="sex" property="sex" jdbcType="VARCHAR" />
        <result column="teacher" property="teacher" jdbcType="INTEGER" />
        <result column="img_url" property="imgUrl" jdbcType="VARCHAR" />
        <result column="stu_id" property="stuId" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="is_graduate" property="isGraduate" jdbcType="TINYINT" />
        <result column="class" property="className" jdbcType="VARCHAR" />
        <association property="teacherInfo" javaType="icu.xuyijie.myfirstspringboot.entity.Teacher">
            <result column="teacherName" property="name" jdbcType="VARCHAR" />
        </association>
    </resultMap>

    <insert id="addStudent">
        INSERT INTO student
            (name, sex, age, stu_id, class, is_graduate, create_time, teacher)
        VALUES
            (#{name}, #{sex}, #{age}, #{stuId}, #{className}, #{isGraduate}, CURRENT_TIMESTAMP, #{teacher})
    </insert>

    <update id="updateStudent">
        UPDATE student
        SET name        = #{name},
            age         = #{age},
            sex         = #{sex},
            is_graduate = #{isGraduate},
            stu_id      = #{stuId},
            class       = #{className},
            teacher     = #{teacher}
        WHERE id = #{id}
    </update>

    <select id="getStudentList" resultMap="map1">
        SELECT
            s.*,t.name AS teacherName
        FROM `student` s
                 LEFT JOIN teacher t ON t.id = s.teacher
        <where>
            <if test="name != null and name != ''">
                AND s.name = #{name}
            </if>
            <if test="className != null and className != ''">
                AND s.class = #{className}
            </if>
        </where>
    </select>

</mapper>
